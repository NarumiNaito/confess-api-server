name: Deploy Laravel to AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: composer install
        uses: "ramsey/composer-install@v2"
        with:
          working-directory: "."
          composer-options: "--optimize-autoloader"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Log in to Amazon ECR for nginx
        run: |
          aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 124355639597.dkr.ecr.ap-northeast-1.amazonaws.com
      - name: Build and Push Docker Image for nginx
        run: |
          docker build --platform linux/x86_64 -f .docker/nginx/Dockerfile -t confess-api-server/prod/nginx .
          docker tag confess-api-server/prod/nginx:latest 124355639597.dkr.ecr.ap-northeast-1.amazonaws.com/confess-api-server/prod/nginx:latest
          docker push 124355639597.dkr.ecr.ap-northeast-1.amazonaws.com/confess-api-server/prod/nginx:latest

      - name: Log in to Amazon ECR for php
        run: |
          aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 124355639597.dkr.ecr.ap-northeast-1.amazonaws.com
      - name: Build and Push Docker Image for php
        run: |
          docker build --platform linux/x86_64 -f .docker/php/Dockerfile -t confess-api-server/prod/php .
          docker tag confess-api-server/prod/app:latest 124355639597.dkr.ecr.ap-northeast-1.amazonaws.com/confess-api-server/prod/app:latest
          docker push 124355639597.dkr.ecr.ap-northeast-1.amazonaws.com/confess-api-server/prod/app:latest

  # deploy-to-ecs:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push

  #   steps:
  #     - name: Deploy to ECS
  #       run: |
  #         aws ecs update-service --cluster <cluster_name> --service <service_name> --force-new-deployment
  # docker build -f .docker/nginx/Dockerfile -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com/nginx:latest .
  # docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com/nginx:latest
